name: Package and Publish to NuGet

on:
  release:
    types: [created]
  pull_request:

jobs:
  build-nuget-tool:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Publish
        run: dotnet publish --no-restore /p:PublicRelease=true
      - name: Pack
        run: dotnet pack --no-build /p:PublicRelease=true
      - name: Push Packages
        if: ${{ github.event_name == 'release'}}
        run: dotnet nuget push "**/*.nupkg" --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }} --skip-duplicate

  build-executable:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    strategy:
      matrix:
        target: [osx-arm64, linux-x64, linux-arm64, win-x64]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Create ${{ matrix.target }} Package
        run: dotnet publish -r ${{ matrix.target }} --self-contained true -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true -p:DebugType=None -p:IncludeAllContentForSelfExtract=true -p:PublicRelease=true UndercutF1.Console/UndercutF1.Console.csproj -o ${{ matrix.target }}-output

      - name: Download codesign certificate
        if: contains(matrix.target, 'osx')
        env:
          MAC_CODESIGN_CERT: ${{ secrets.MAC_CODESIGN_CERT }}
        run: |
          echo $MAC_CODESIGN_CERT | base64 --decode > certificate.p12

      - name: Sign Executable
        uses: indygreg/apple-code-sign-action@v1
        if: contains(matrix.target, 'osx')
        with:
          input_path: ${{ matrix.target }}-output/undercutf1
          p12_file: certificate.p12
          p12_password: ${{ secrets.MAC_CODESIGN_PASSWORD }}

      - name: Upload ${{ matrix.target }} to Release
        uses: svenstaro/upload-release-action@v2
        if: ${{ github.event_name == 'release'}}
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ matrix.target }}-output/${{ contains(matrix.target, 'win') && 'undercutf1.exe'  || 'undercutf1'}}
          asset_name: undercutf1-${{ matrix.target }}${{ contains(matrix.target, 'win') && '.exe'  || ''}}
          tag: ${{ github.ref }}

      - name: Upload ${{ matrix.target }} to Pull Request
        uses: actions/upload-artifact@v4
        if: ${{ github.event_name == 'pull_request'}}
        with:
          name: undercutf1-${{ matrix.target }}${{ contains(matrix.target, 'win') && '.exe'  || ''}}
          path: ${{ matrix.target }}-output/${{ contains(matrix.target, 'win') && 'undercutf1.exe'  || 'undercutf1'}}
          overwrite: true

  build-docker-image:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - uses: dotnet/nbgv@master
        id: nbgv
          
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
  
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        if: ${{ github.event_name == 'release'}}
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: justaman62/undercutf1:latest,justaman62/undercutf1:${{ steps.nbgv.outputs.SemVer2 }}

      - name: Build and push
        if: ${{ github.event_name == 'pull_request'}}
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: justaman62/undercutf1:${{ steps.nbgv.outputs.SemVer2 }}
