name: Package and Publish to NuGet

on:
  release:
    types: [created]

jobs:
  build-nuget-tool:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Publish
      run: dotnet publish --no-restore /p:PublicRelease=true
    - name: Pack
      run: dotnet pack --no-build /p:PublicRelease=true
    - name: Push Packages
      run: dotnet nuget push "**/*.nupkg" --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }} --skip-duplicate
  
  build-executables:
    runs-on: ubuntu-latest
  
    permissions:
      contents: write

    strategy:
      matrix:
        target: [osx-arm64, linux-x64, linux-arm64, win-x64]

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore

    - name: Create ${{ matrix.target }} Package
      run: dotnet publish -r ${{ matrix.target }} --self-contained true -p:PublishSingleFile=true -p:PublicRelease=true OpenF1.Console/OpenF1.Console.csproj -o ${{ matrix.target }}-output
    - name: Upload ${{ matrix.target }} to Release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ${{ matrix.target }}-output/${{ contains(matrix.target, 'win') && 'openf1-console.exe'  || 'openf1-console'}}
        asset_name: openf1-console-${{ matrix.target }}${{ contains(matrix.target, 'win') && '.exe'  || ''}}
        tag: ${{ github.ref }}
